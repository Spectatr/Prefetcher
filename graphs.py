
# coding: utf-8

# In[34]:

from pylab import *
from IPython.display import *


# In[337]:

t1 = [
1.654713,
1.680239,
1.682478,
1.699755,
1.703486,
1.694704,
1.693424,
1.679497,
1.689884,
1.680549,
1.67998,
1.67595,
1.662079,
1.652858,
1.654342,
1.653606,
1.651218,
1.654403,
1.653416,
1.653487,
1.653332,
1.653487,
1.653486,
1.653271,
1.653255,
1.653558,
1.653387,
1.653419,
1.653424,
1.653429
]

t2=[
1.654806,
1.680161,
1.685124,
1.700365,
1.704897,
1.695028,
1.693797,
1.679546,
1.690092,
1.680162,
1.67983,
1.675975,
1.662326,
1.653295,
1.654816,
1.65419,
1.651548,
1.655019,
1.654017,
1.65398,
1.653859,
1.653745,
1.653933,
1.65389,
1.653732,
1.653737,
1.653947,
1.65369,
1.653749,
1.653755
]

t3=[
1.655362,
1.68059,
1.682933,
1.699858,
1.704092,
1.694692,
1.693592,
1.679397,
1.690061,
1.680517,
1.680047,
1.676355,
1.662562,
1.652909,
1.654361,
1.653841,
1.651081,
1.654753,
1.653767,
1.653672,
1.653671,
1.653557,
1.653757,
1.653564,
1.653547,
1.653677,
1.653689,
1.653685,
1.653689,
1.653695
]

t4=[
1.653399,
1.678555,
1.681073,
1.698477,
1.703379,
1.694225,
1.693233,
1.678433,
1.689192,
1.679071,
1.678879,
1.674649,
1.661312,
1.651977,
1.652823,
1.652085,
1.649852,
1.653452,
1.652198,
1.652075,
1.652154,
1.652203,
1.652389,
1.652212,
1.652212,
1.652212,
1.652212,
1.652212,
1.652212,
1.652212
]

t5=[
1.675188,
1.691964,
1.687953,
1.698842,
1.703346,
1.700985,
1.699142,
1.693734,
1.693785,
1.688643,
1.685586,
1.688067,
1.672409,
1.665164,
1.665891,
1.670259,
1.667036,
1.665617,
1.669095,
1.668820,
1.666780,
1.670312,
1.669399,
1.667584,
1.669322,
1.667144,
1.668787,
1.671131,
1.669109,
1.670174
]

p1,=plot(arange(1, 31, 1), t1)
p2,=plot(arange(1, 31, 1), t2)
p3,=plot(arange(1, 31, 1), t3)
p4,=plot(arange(1, 31, 1), t4)
p5,=plot(arange(1, 31, 1), t5)
legend([p1,p2,p3,p4,p5],["GHB/IT 96/32","GHB/IT 112/16","GHB/IT 80/48","GHB/IT 1/1","GHB/IT 1000/1000"])
xlabel('Prefetcher Queue size')
ylabel('Average AMAT')
title("Average AMAT with different GHB/Index Table sizes, depth/width = 4/1")
grid(True)
fig = matplotlib.pyplot.gcf()
fig.set_size_inches(15,5)
savefig("queuesize.png")
FileLink("queuesize.png")


# In[376]:

data=array([
[
1.650137,
1.65043,
1.650287,
1.650633,
1.650849,
1.651494,
1.651212,
1.650698,
1.651367,
1.651021
],
[
1.650316,
1.650952,
1.651169,
1.651245,
1.651683,
1.652095,
1.652516,
1.652152,
1.652863,
1.652654
],
[
1.650117,
1.651554,
1.652058,
1.652845,
1.653785,
1.654136,
1.654567,
1.655076,
1.65579,
1.655919
],
[
1.651081,
1.652469,
1.653077,
1.653928,
1.655615,
1.655874,
1.656979,
1.657141,
1.657382,
1.65723
],
[
1.651187,
1.652925,
1.654388,
1.655284,
1.656005,
1.655746,
1.656019,
1.65577,
1.656754,
1.656876
],
[
1.651326,
1.653815,
1.655414,
1.656374,
1.656035,
1.656456,
1.656389,
1.657317,
1.6572,
1.657678
],
[
1.65159,
1.654416,
1.654815,
1.656392,
1.657669,
1.656947,
1.658356,
1.65802,
1.658362,
1.659193
],
[
1.652305,
1.654762,
1.655979,
1.657552,
1.657913,
1.658309,
1.659037,
1.658929,
1.659012,
1.660132
],
[
1.652855,
1.655557,
1.657198,
1.659179,
1.658914,
1.659428,
1.660071,
1.660166,
1.6596,
1.661058
],
[
1.65316,
1.655852,
1.658413,
1.659612,
1.660144,
1.660765,
1.661483,
1.661045,
1.661596,
1.662226
]

])

p = pcolormesh(data)
xticks(range(10),range(1,11))
yticks(range(10),range(1,11))
xlabel('Width')
ylabel('Depth')
title("Depth vs Width size")
fig = matplotlib.pyplot.gcf()
fig.set_size_inches(10,5)
cbar=fig.colorbar(p)
cbar.ax.set_ylabel("Average AMAT")
savefig("dvsw.png")
FileLink("dvsw.png")


# In[335]:

ind = np.arange(12)
width = 0.3
baseline = (1,1,1,1,1,1,1,1,1,1,1,1)
optimized = (
1.206198431,
1.217870069,
1.082569292,
1.455643147,
1.37399224,
1.2645374,
1.305409724,
1.273594222,
1.20977248,
1.330973498,
1.60482841,
1.128932223

)

fig, ax = plt.subplots()
p2 = bar(ind, optimized, width,color='b')
p1 = bar(ind+width, baseline, width, color='r')
legend([p2,p1],["No Prefetcher","GHB LD"])
ax.set_xticks(ind+width)
ax.set_xticklabels( ("cjpeg.trace", "djpeg.trace", "du.trace", "g++.trace", "grep.trace", 
                  "ls.trace", "lsR.trace", "plamap.trace", "ps.trace", "pu.trace", "testgen.trace","ammp.trace"),rotation='vertical' )
ylabel('AMAT Speedup')
title("AMAT Speedup, GHB/Index Table entries = 96/32, depth/width = 4/1")
grid(True)
fig.set_size_inches(15,5)
savefig("amatspeedup.png")
FileLink("amatspeedup.png")


# In[336]:

ind = np.arange(12)
width = 0.3
baseline = (
2.894208,
1.636642,
1.515964,
2.467861,
1.900256,
2.504171,
2.370658,
1.467718,
2.911655,
2.401184,
3.014415,
1.356429
)
optimized = (
2.399446,
1.343856,
1.400339,
1.695375,
1.383018,
1.980306,
1.816026,
1.152422,
2.406779,
1.804081,
1.878341,
1.201515
)

fig, ax = plt.subplots()
p2 = bar(ind, optimized, width,color='b')
p1 = bar(ind+width, baseline, width, color='r')
legend([p2,p1],["No Prefetcher","GHB LD"])
ax.set_xticks(ind+width)
ax.set_xticklabels( ("cjpeg.trace", "djpeg.trace", "du.trace", "g++.trace", "grep.trace", 
                  "ls.trace", "lsR.trace", "plamap.trace", "ps.trace", "pu.trace", "testgen.trace","ammp.trace"),rotation='vertical' )
ylabel('AMAT')
title("AMAT Times, GHB/Index Table entries = 96/32, depth/width = 4/1")
grid(True)
fig.set_size_inches(15,5)
savefig("amat.png")
FileLink("amat.png")


# In[371]:

data=array([
[
1.703798,
1.703798,
1.703798,
1.703798,
1.703798,
1.703798,
1.703798,
1.703798
],
[
1.703790,
1.703790,
1.703790,
1.703790,
1.703790,
1.703790,
1.703790,
1.703790
],
[
1.703869,
1.703869,
1.703869,
1.703869,
1.703869,
1.703869,
1.703869,
1.703869
],
[
1.703869,
1.703892,
1.703897,
1.703920,
1.703920,
1.703920,
1.703920,
1.703920
],
[
1.703780,
1.703803,
1.703831,
1.703966,
1.703966,
1.703966,
1.703966,
1.703966
],
[
1.703729,
1.703752,
1.704249,
1.704366,
1.704366,
1.704398,
1.704398,
1.704398
],
[
1.703169,
1.703201,
1.704187,
1.705089,
1.705253,
1.705285,
1.705284,
1.705284
],
[
1.702748,
1.703119,
1.704715,
1.705222,
1.705484,
1.705562,
1.706538,
1.706786
]

])

p = pcolormesh(data)
xticks(range(8),[2**x for x in range(0,8,1)])
yticks(range(8),[2**x for x in range(0,8,1)])
ylabel('GHB Entries')
xlabel('Index Table Entries')
title("GHB Entries vs Index Table Entries")
fig = matplotlib.pyplot.gcf()
fig.set_size_inches(10,5)
cbar=fig.colorbar(p)
cbar.ax.set_ylabel("Average AMAT")
savefig("ghbvsitentries.png")
FileLink("ghbvsitentries.png")


# In[308]:

[2**x for x in range(0,8,1)]


# In[375]:

fig2=subplot(6, 2, 1)
data=array([
[
2.388387,
2.388387,
2.388387,
2.388387,
2.388387,
2.388387,
2.388387,
2.388387
],
[
2.389197,
2.389197,
2.389197,
2.389197,
2.389197,
2.389197,
2.389197,
2.389197
],
[
2.389197,
2.389197,
2.389197,
2.389197,
2.389197,
2.389197,
2.389197,
2.389197
],
[
2.389197,
2.389197,
2.389197,
2.389197,
2.389197,
2.389197,
2.389197,
2.389197
],
[
2.388726,
2.388726,
2.388726,
2.389197,
2.389197,
2.389197,
2.389197,
2.389197
],
[
2.389716,
2.389716,
2.392375,
2.393317,
2.393317,
2.393317,
2.393317,
2.393317
],
[
2.389245,
2.389245,
2.392846,
2.395674,
2.397089,
2.397089,
2.397089,
2.397089
],
[
2.388160,
2.388160,
2.394769,
2.397145,
2.398993,
2.399653,
2.400954,
2.400954
]

])

pcolormesh(data)
xticks(range(8),[2**x for x in range(0,8,1)])
yticks(range(8),[2**x for x in range(0,8,1)])
ylabel('GHB Entries')
xlabel('Index Table Entries')
title("CJPEG - GHB Entries vs Index Table Entries")
fig = matplotlib.pyplot.gcf()
cbar=fig.colorbar(p)
cbar.ax.set_ylabel("Average AMAT")
fig.set_size_inches(7,5)

subplot(6, 2, 2)
data=array([
[
1.345343,
1.345343,
1.345343,
1.345343,
1.345343,
1.345343,
1.345343,
1.345343
],
[
1.345424,
1.345424,
1.345424,
1.345424,
1.345424,
1.345424,
1.345424,
1.345424
],
[
1.345424,
1.345424,
1.345424,
1.345424,
1.345424,
1.345424,
1.345424,
1.345424
],
[
1.345424,
1.345424,
1.345424,
1.345424,
1.345424,
1.345424,
1.345424,
1.345424
],
[
1.345377,
1.345377,
1.345377,
1.345424,
1.345424,
1.345424,
1.345424,
1.345424
],
[
1.345492,
1.345492,
1.343174,
1.343269,
1.343269,
1.343269,
1.343269,
1.343269
],
[
1.345598,
1.345598,
1.343405,
1.343661,
1.343661,
1.343661,
1.343661,
1.343661
],
[
1.342844,
1.342844,
1.345769,
1.345932,
1.345994,
1.343338,
1.343727,
1.343727

]

])

pcolormesh(data)
xticks(range(8),[2**x for x in range(0,8,1)])
yticks(range(8),[2**x for x in range(0,8,1)])
ylabel('GHB Entries')
xlabel('Index Table Entries')
title("DJPEG - GHB Entries vs Index Table Entries")
fig = matplotlib.pyplot.gcf()
cbar=fig.colorbar(p)
cbar.ax.set_ylabel("Average AMAT")
fig.set_size_inches(7,5)

subplot(6, 2, 3)
data=array([
[
1.400136,
1.400136,
1.400136,
1.400136,
1.400136,
1.400136,
1.400136,
1.400136
],
[
1.400120,
1.400120,
1.400120,
1.400120,
1.400120,
1.400120,
1.400120,
1.400120
],
[
1.400120,
1.400120,
1.400120,
1.400120,
1.400120,
1.400120,
1.400120,
1.400120

],
[
1.400120,
1.400120,
1.400120,
1.400120,
1.400120,
1.400120,
1.400120,
1.400120
],
[
1.400095,
1.400095,
1.400095,
1.400120,
1.400120,
1.400120,
1.400120,
1.400120
],
[
1.400142,
1.400142,
1.400132,
1.400157,
1.400157,
1.400157,
1.400157,
1.400157
],
[
1.400122,
1.400122,
1.400214,
1.400299,
1.400299,
1.400299,
1.400299,
1.400299
],
[
1.400092,
1.400092,
1.400260,
1.400339,
1.400391,
1.400416,
1.400516,
1.400516
]

])

pcolormesh(data)
xticks(range(8),[2**x for x in range(0,8,1)])
yticks(range(8),[2**x for x in range(0,8,1)])
ylabel('GHB Entries')
xlabel('Index Table Entries')
title("DU - GHB Entries vs Index Table Entries")
fig = matplotlib.pyplot.gcf()
cbar=fig.colorbar(p)
cbar.ax.set_ylabel("Average AMAT")
fig.set_size_inches(7,5)

subplot(6, 2, 4)
data=array([
[
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067
],
[
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067
],
[
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067
],
[
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067
],
[
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067,
1.695067
],
[
1.694052,
1.694052,
1.693850,
1.693850,
1.693850,
1.693931,
1.693931,
1.693931

],
[
1.693769,
1.693769,
1.693566,
1.695497,
1.695497,
1.695375,
1.695375,
1.695375

],
[
1.693769,
1.696487,
1.696284,
1.698215,
1.698215,
1.698093,
1.698093,
1.698004
]

])

pcolormesh(data)
xticks(range(8),[2**x for x in range(0,8,1)])
yticks(range(8),[2**x for x in range(0,8,1)])
ylabel('GHB Entries')
xlabel('Index Table Entries')
title("G++ - GHB Entries vs Index Table Entries")
fig = matplotlib.pyplot.gcf()
cbar=fig.colorbar(p)
cbar.ax.set_ylabel("Average AMAT")
fig.set_size_inches(7,5)

subplot(6, 2, 5)
data=array([
[
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670
],
[
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670
],
[
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670
],
[
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670
],
[
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670,
1.382670
],
[
1.382070,
1.382070,
1.382570,
1.382570,
1.382570,
1.382570,
1.382570,
1.382570

],
[
1.381684,
1.381684,
1.382170,
1.383018,
1.383018,
1.383018,
1.383018,
1.383018
],
[
1.381684,
1.381884,
1.382470,
1.384442,
1.384442,
1.385260,
1.385260,
1.385230
]

])

pcolormesh(data)
xticks(range(8),[2**x for x in range(0,8,1)])
yticks(range(8),[2**x for x in range(0,8,1)])
ylabel('GHB Entries')
xlabel('Index Table Entries')
title("GREP - GHB Entries vs Index Table Entries")
fig = matplotlib.pyplot.gcf()
cbar=fig.colorbar(p)
cbar.ax.set_ylabel("Average AMAT")
fig.set_size_inches(7,5)

subplot(6, 2, 6)
data=array([
[
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888
],
[
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888
],
[
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888
],
[
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888
],
[
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888,
1.979888
],
[
1.979554,
1.979554,
1.979554,
1.979554,
1.979554,
1.979621,
1.979621,
1.979621
],
[
1.979053,
1.979053,
1.979053,
1.980406,
1.980406,
1.980306,
1.980306,
1.980306
],
[
1.979053,
1.979053,
1.978769,
1.981452,
1.981452,
1.982267,
1.984856,
1.984856
]

])

pcolormesh(data)
xticks(range(8),[2**x for x in range(0,8,1)])
yticks(range(8),[2**x for x in range(0,8,1)])
ylabel('GHB Entries')
xlabel('Index Table Entries')
title("LS - GHB Entries vs Index Table Entries")
fig = matplotlib.pyplot.gcf()
cbar=fig.colorbar(p)
cbar.ax.set_ylabel("Average AMAT")
fig.set_size_inches(7,5)

subplot(6, 2, 7)
data=array([
[
1.818320,
1.818320,
1.818320,
1.818320,
1.818320,
1.818320,
1.818320,
1.818320
],
[
1.818016,
1.818016,
1.818016,
1.818016,
1.818016,
1.818016,
1.818016,
1.818016
],
[
1.818472,
1.818472,
1.818472,
1.818472,
1.818472,
1.818472,
1.818472,
1.818472
],
[
1.818472,
1.818472,
1.818472,
1.818472,
1.818472,
1.818472,
1.818472,
1.818472
],
[
1.818472,
1.818472,
1.818472,
1.818624,
1.818624,
1.818624,
1.818624,
1.818624
],
[
1.818472,
1.818472,
1.819384,
1.819080,
1.819080,
1.818636,
1.818636,
1.818636
],
[
1.817511,
1.817517,
1.819680,
1.820382,
1.820410,
1.819905,
1.820057,
1.820057
],
[
1.816409,
1.816297,
1.818785,
1.815901,
1.815929,
1.814174,
1.814630,
1.815330
]

])

pcolormesh(data)
xticks(range(8),[2**x for x in range(0,8,1)])
yticks(range(8),[2**x for x in range(0,8,1)])
ylabel('GHB Entries')
xlabel('Index Table Entries')
title("LSR - GHB Entries vs Index Table Entries")
fig = matplotlib.pyplot.gcf()
cbar=fig.colorbar(p)
cbar.ax.set_ylabel("Average AMAT")
fig.set_size_inches(7,5)

subplot(6, 2, 8)
data=array([
[
1.152616,
1.152616,
1.152616,
1.152616,
1.152616,
1.152616,
1.152616,
1.152616
],
[
1.152616,
1.152616,
1.152616,
1.152616,
1.152616,
1.152616,
1.152616,
1.152616
],
[
1.152616,
1.152616,
1.152616,
1.152616,
1.152616,
1.152616,
1.152616,
1.152616
],
[
1.152616,
1.152616,
1.152678,
1.152678,
1.152678,
1.152678,
1.152678,
1.152678
],
[
1.152616,
1.152616,
1.152678,
1.152638,
1.152638,
1.152638,
1.152638,
1.152638
],
[
1.152616,
1.152616,
1.152678,
1.152598,
1.152598,
1.152598,
1.152598,
1.152598
],
[
1.152616,
1.152714,
1.152776,
1.152542,
1.152696,
1.152696,
1.152520,
1.152520
],
[
1.152466,
1.152564,
1.152742,
1.152412,
1.152468,
1.152480,
1.152566,
1.152566
]

])

pcolormesh(data)
xticks(range(8),[2**x for x in range(0,8,1)])
yticks(range(8),[2**x for x in range(0,8,1)])
ylabel('GHB Entries')
xlabel('Index Table Entries')
title("PLAMAP - GHB Entries vs Index Table Entries")
fig = matplotlib.pyplot.gcf()
cbar=fig.colorbar(p)
cbar.ax.set_ylabel("Average AMAT")
fig.set_size_inches(7,5)

subplot(6, 2, 9)
data=array([
[
2.400308,
2.400308,
2.400308,
2.400308,
2.400308,
2.400308,
2.400308,
2.400308
],
[
2.399978,
2.399978,
2.399978,
2.399978,
2.399978,
2.399978,
2.399978,
2.399978
],
[
2.399978,
2.399978,
2.399978,
2.399978,
2.399978,
2.399978,
2.399978,
2.399978
],
[
2.399978,
2.399978,
2.399978,
2.399978,
2.399978,
2.399978,
2.399978,
2.399978
],
[
2.399478,
2.399478,
2.399478,
2.399978,
2.399978,
2.399978,
2.399978,
2.399978
],
[
2.399648,
2.399648,
2.402838,
2.403839,
2.403839,
2.403839,
2.403839,
2.403839
],
[
2.397628,
2.397628,
2.402018,
2.406279,
2.406279,
2.406279,
2.406279,
2.406279
],
[
2.397478,
2.397478,
2.402408,
2.406259,
2.407209,
2.407709,
2.412330,
2.414490
]

])

pcolormesh(data)
xticks(range(8),[2**x for x in range(0,8,1)])
yticks(range(8),[2**x for x in range(0,8,1)])
ylabel('GHB Entries')
xlabel('Index Table Entries')
title("PS - GHB Entries vs Index Table Entries")
fig = matplotlib.pyplot.gcf()
cbar=fig.colorbar(p)
cbar.ax.set_ylabel("Average AMAT")
fig.set_size_inches(7,5)

subplot(6, 2, 10)
data=array([
[
1.806577,
1.806577,
1.806577,
1.806577,
1.806577,
1.806577,
1.806577,
1.806577
],
[
1.806247,
1.806247,
1.806247,
1.806247,
1.806247,
1.806247,
1.806247,
1.806247
],
[
1.806742,
1.806742,
1.806742,
1.806742,
1.806742,
1.806742,
1.806742,
1.806742
],
[
1.806742,
1.806742,
1.806742,
1.806742,
1.806742,
1.806742,
1.806742,
1.806742
],
[
1.806742,
1.806742,
1.806742,
1.806907,
1.806907,
1.806907,
1.806907,
1.806907
],
[
1.806742,
1.806742,
1.807731,
1.807401,
1.807401,
1.806920,
1.806920,
1.806920
],
[
1.805397,
1.805403,
1.808621,
1.807293,
1.807662,
1.806498,
1.806663,
1.806663
],
[
1.804263,
1.804141,
1.805628,
1.803293,
1.803663,
1.803983,
1.803748,
1.803145
]

])

pcolormesh(data)
xticks(range(8),[2**x for x in range(0,8,1)])
yticks(range(8),[2**x for x in range(0,8,1)])
ylabel('GHB Entries')
xlabel('Index Table Entries')
title("PU - GHB Entries vs Index Table Entries")
fig = matplotlib.pyplot.gcf()
cbar=fig.colorbar(p)
cbar.ax.set_ylabel("Average AMAT")
fig.set_size_inches(7,5)

subplot(6, 2, 11)
data=array([
[
1.874840,
1.874840,
1.874840,
1.874840,
1.874840,
1.874840,
1.874840,
1.874840
],
[
1.874840,
1.874840,
1.874840,
1.874840,
1.874840,
1.874840,
1.874840,
1.874840
],
[
1.874840,
1.874840,
1.874840,
1.874840,
1.874840,
1.874840,
1.874840,
1.874840
],
[
1.874840,
1.875117,
1.875117,
1.875394,
1.875394,
1.875394,
1.875394,
1.875394
],
[
1.874840,
1.875117,
1.875394,
1.875671,
1.875671,
1.875671,
1.875671,
1.875671
],
[
1.874834,
1.875111,
1.875388,
1.875388,
1.875388,
1.876070,
1.876070,
1.876070
],
[
1.874003,
1.874280,
1.874557,
1.874557,
1.874557,
1.876347,
1.876624,
1.876624
],
[
1.875388,
1.877050,
1.877327,
1.875810,
1.875942,
1.878247,
1.880519,
1.881350
]

])

pcolormesh(data)
xticks(range(8),[2**x for x in range(0,8,1)])
yticks(range(8),[2**x for x in range(0,8,1)])
ylabel('GHB Entries')
xlabel('Index Table Entries')
title("TESTGEN - GHB Entries vs Index Table Entries")
fig = matplotlib.pyplot.gcf()
cbar=fig.colorbar(p)
cbar.ax.set_ylabel("Average AMAT")
fig.set_size_inches(7,5)

subplot(6, 2, 12)
data=array([
[
1.201430,
1.201430,
1.201430,
1.201430,
1.201430,
1.201430,
1.201430,
1.201430
],
[
1.201413,
1.201413,
1.201413,
1.201413,
1.201413,
1.201413,
1.201413,
1.201413
],
[
1.201413,
1.201413,
1.201413,
1.201413,
1.201413,
1.201413,
1.201413,
1.201413
],
[
1.201413,
1.201413,
1.201413,
1.201413,
1.201413,
1.201413,
1.201413,
1.201413
],
[
1.201389,
1.201389,
1.201389,
1.201413,
1.201413,
1.201413,
1.201413,
1.201413
],
[
1.201413,
1.201413,
1.201315,
1.201365,
1.201365,
1.201365,
1.201365,
1.201365
],
[
1.201404,
1.201404,
1.201340,
1.201465,
1.201465,
1.201465,
1.201515,
1.201515
],
[
1.201376,
1.201376,
1.201364,
1.201468,
1.201105,
1.201130,
1.201258,
1.201258
]

])

pcolormesh(data)
xticks(range(8),[2**x for x in range(0,8,1)])
yticks(range(8),[2**x for x in range(0,8,1)])
ylabel('GHB Entries')
xlabel('Index Table Entries')
title("AMMP - GHB Entries vs Index Table Entries")
fig = matplotlib.pyplot.gcf()
cbar=fig.colorbar(p)
cbar.ax.set_ylabel("Average AMAT")
fig.set_size_inches(20,30)
fig.tight_layout()

savefig("TRACESghbvsitentries.png")
FileLink("TRACESghbvsitentries.png")


# In[404]:

ind = np.arange(1)
width = 0.01
smart = (1)
loads =(1.040631594)
stores = (1.163754329)
dumb = (1.004698365)

fig, ax = plt.subplots()
p2 = bar(ind, smart, width,color='b')
p1 = bar(ind+width, dumb, width, color='r')
p3 = bar(ind+width+width, loads, width, color='g')
p4 = bar(ind+width+width+width,stores , width, color='y')
legend([p2,p1,p3,p4],["Seperation", "No Seperation","Loads", "Stores"])
ax.set_xticks(ind+width)
ylim([.95,1.2])
ax.set_xticklabels( ("") )
ylabel('AMAT Slowdown (lower is better)')
title("AMAT Slowdown with Seperation, Loads, Stores, and No Seperation, GHB/Index Table entries = 96/32, depth/width = 4/1")
grid(True)
fig.set_size_inches(10,5)
fig.tight_layout()
savefig("seperation.png")
FileLink("seperation.png")


# In[ ]:



